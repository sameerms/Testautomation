import vscode = require('vscode');
import { ExtensionContext } from 'vscode';
export interface IPackageInfo {
    name: string;
    version: string;
    aiKey: string;
}
export declare function getPackageInfo(context: ExtensionContext): IPackageInfo;
export declare function generateGuid(): string;
export declare function generateUserId(): Promise<string>;
export declare function isEditingSqlFile(languageId: string): boolean;
export declare function getActiveTextEditor(): vscode.TextEditor;
export declare function getActiveTextEditorUri(): string;
export declare function logToOutputChannel(msg: any, outputChannelName: string): void;
export declare function logDebug(msg: any, extensionConfigSectionName: string): void;
export declare function showInfoMsg(msg: string, extensionName: string): void;
export declare function showWarnMsg(msg: string, extensionName: string): void;
export declare function showErrorMsg(msg: string, extensionName: string): void;
export declare function isEmpty(str: any): boolean;
export declare function isNotEmpty(str: any): boolean;
/**
 * Format a string. Behaves like C#'s string.Format() function.
 */
export declare function formatString(str: string, ...args: any[]): string;
/**
 * Check if a file exists on disk
 */
export declare function isFileExisting(filePath: string): boolean;
/**
 * Takes a string in the format of HH:MM:SS.MS and returns a number representing the time in
 * miliseconds
 * @param value The string to convert to milliseconds
 * @return False is returned if the string is an invalid format,
 *         the number of milliseconds in the time string is returned otherwise.
 */
export declare function parseTimeString(value: string): number | boolean;
/**
 * Takes a number of milliseconds and converts it to a string like HH:MM:SS.fff
 * @param value The number of milliseconds to convert to a timespan string
 * @returns A properly formatted timespan string.
 */
export declare function parseNumAsTimeString(value: number): string;
export declare function getAppDataPath(): any;
export declare function getDefaultLogLocation(): any;
